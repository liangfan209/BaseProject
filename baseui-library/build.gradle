apply plugin: 'com.android.library'
apply from:"../base_nexus.gradle"
apply plugin: 'maven'

android {

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }

}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //    api "com.android.bq.utils:utilslib:0.0.3"
    //    api "com.android.bq.net:netlib:0.0.3"
    api project(path: ':utils-library')
    api project(path: ':net-library')
    api rootProject.ext.dependencies["androidx.appcompat"]
    api rootProject.ext.dependencies["androidx.lifecycle"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["autosize"]
    api rootProject.ext.dependencies["quick.adapter"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["butterknife"]
    api rootProject.ext.dependencies["arouter"]
    api rootProject.ext.dependencies["picker.view"]
    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    //    api 'com.jaychang:simpletext:2.0.1'
    //rx系列
    //    api rootProject.ext.dependencies["retrofit"]
    //    api rootProject.ext.dependencies["retrofit.converter.gson"]
    //    api rootProject.ext.dependencies["okhttp.urlconnection"]
    //    api rootProject.ext.dependencies["okhttp.logging"]
    //    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["retrofit.adapter.rxjava2"]
    api rootProject.ext.dependencies["loading.dialog"]
    api rootProject.ext.dependencies["x.dialog"]
    api rootProject.ext.dependencies["smartrefresh"]
    api rootProject.ext.dependencies["smartrefresh.header"]
    api rootProject.ext.dependencies["quick.adapter"]
    api rootProject.ext.dependencies["base.utils"]
    api rootProject.ext.dependencies["base.skin"]
    api 'skin.support:skin-support:4.0.5'
    // skin-support
    api 'skin.support:skin-support-appcompat:4.0.5'
    // skin-support 基础控件支持
    api 'skin.support:skin-support-design:4.0.5'
    // skin-support-design material design 控件支持[可选]
    api 'skin.support:skin-support-cardview:4.0.5'
    // skin-support-cardview CardView 控件支持[可选]
    api 'skin.support:skin-support-constraint-layout:4.0.5'
    // skin-support-constraint-layout ConstraintLayout 控件支持[可选]
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    api 'com.github.zhpanvip:BannerViewPager:3.1.4'
    api 'androidx.viewpager2:viewpager2:1.0.0'
    api 'com.shuyu:GSYVideoPlayer:7.1.4'
    api 'com.github.SherlockGougou:BigImageViewPager:androidx-6.0.1'
    //动画效果
    api 'com.airbnb.android:lottie:2.7.0'
    api 'com.umeng.umsdk:analytics:8.0.0'
    api 'com.umeng.umsdk:common:2.0.0'


    implementation files('libs/umeng-shareboard-widget-6.9.6.jar')
    implementation files('libs/umeng-share-core-6.9.6.jar')
    implementation files('libs/umeng-sharetool-6.9.6.jar')
    implementation files('libs/umeng-share-wechat-simplify-6.9.6.jar')
    implementation files('libs/umeng-share-QQ-simplify-6.9.6.jar')
    implementation files('libs/umeng-share-sina-simplify-6.9.6.jar')
    implementation files('libs/core_3.0.1.jar')

    //test
    api rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["androidJUnitRunner"]
    api rootProject.ext.dependencies["espresso"]
    api rootProject.ext.dependencies["retrofit.converter.gson"]
    api rootProject.ext.dependencies["okgo"]
    api rootProject.ext.dependencies["okgo.chuck"]
}


Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
properties.load( inputStream )
def userName = properties.getProperty('NEXUS_USERNAME')
def userPwd = properties.getProperty('NEXUS_PASSWORD')
def uploadUrl = properties.getProperty('RELEASE_REPOSITORY_URL')
uploadArchives {
    repositories {
        mavenDeployer {
            //仓库地址
            repository(url: uploadUrl) {
                //私服账户信息
                authentication(userName: userName, password: userPwd)
            }
            //pom必需的参数
            pom.project {
                groupId "com.android.bq.baseui"
                artifactId "baseui"
                version "0.0.3"
            }
        }
    }
}